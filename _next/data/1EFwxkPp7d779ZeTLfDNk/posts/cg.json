{"pageProps":{"post":{"title":"我理解的计算机图形学","date":1576780980000,"slug":"cg","content":"<h2>backgrounds</h2>\n<p>首先需要明确的是，在现实世界中，被人眼/相机观测的到内容都是 2D 的，3D 是双眼效应（Binocular vision）和大脑脑补的结果，包括全息、VR 设备和 3D 电影。\n显示设备大多数也是输出 2D 图像（一些烟雾屏幕除外）。</p>\n<p>然后是二维图像，一张二维图像由许多像素点组成，每个像素点有自己的颜色，颜色可以由你定义的任何值表示，单通道的灰度图，三个数组成的 rgb 值，还可以附加一个透明度信息，可以使用别的颜色表示系统等。一张矩形的图像由宽*高个像素组成，那么我们的目的就是分别计算这些像素的颜色并将其显示在设备上。</p>\n<p>所以我们要做的是实现一个 <code class=\"language-unknown\">pixelData =&#x26;gt; color</code> 的函数（着色函数），然后输入渲染每个像素的需要的数据，就得到了每个像素的颜色。\n提供给着色函数的数据分为两类，一类是所有像素共享的，在一次渲染中一致的信息，常用的有当前时间，屏幕尺寸，图片纹理等。另一类是每个像素都不同的信息，主要是像素位置。</p>\n<h2>2d</h2>\n<p>下面是一个使用<code class=\"language-unknown\">div</code>作为显示终端渲染 2D 图形的简单实现，根据像素的位置信息 <code class=\"language-unknown\">p(x, y)</code> 以及给定的圆心和半径, 我们可以得到像素位置距圆心的距离，及此像素是否在圆内，然后就可以决定此像素是什么颜色。我们还可以根据当前时间<code class=\"language-unknown\">t</code>来变换半径的大小和颜色，效果如下。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">color</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">rgba(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> , </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>a<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n<span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\ncontainer<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">width</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>width <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span>\ncontainer<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>height <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">const</span> pixels <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">fill</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> pixel <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>pixel<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">return</span> pixel\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">t</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// circle</span>\n  <span class=\"token keyword\">const</span> origin <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> ridus <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sin</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.25</span>\n\n  pixels<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> height<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> width<span class=\"token punctuation\">,</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">floor</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">/</span> width<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> height<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\">// draw circle</span>\n    <span class=\"token keyword\">const</span> l <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> origin<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> origin<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&#x3C;</span> ridus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// inside circle</span>\n      <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sin</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span>\n      <span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sin</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">/</span> <span class=\"token number\">1000</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span>\n      <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sin</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">/</span> <span class=\"token number\">1000</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span>\n      res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n\n    v<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">backgroundColor</span> <span class=\"token operator\">=</span> <span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token spread operator\">...</span>res<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p><a href=\"https://codesandbox.io/s/2d-rendering-with-div-d1bc0\">Try it on CodeSandbox</a></p>\n<h2>3d</h2>\n<p>接下来是渲染 3D，我们将 3D 空间中的坐标投影在 2D 平面上。如果是正交投影, 当前像素的颜色就是在屏幕空间当前像素位置在屏幕法线方向上光线的颜色，如果是透视投影，当前像素的颜色就是视点位置在 <em>视点到像素位置</em> 的方向上的光线颜色。</p>\n<p>简单实现如下，球在 z 轴的位置根据时间移动，因为没有计算光线，直接使用了法线方向作为颜色输出，<code class=\"language-unknown\">rgb</code> 对应法线的 <code class=\"language-unknown\">xyz</code> 坐标</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sphIntersect</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ro<span class=\"token punctuation\">,</span> rd<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">,</span> radius</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> oc <span class=\"token operator\">=</span> vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ro<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dot</span><span class=\"token punctuation\">(</span>oc<span class=\"token punctuation\">,</span> rd<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dot</span><span class=\"token punctuation\">(</span>oc<span class=\"token punctuation\">,</span> oc<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> radius <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n  <span class=\"token keyword\">let</span> h <span class=\"token operator\">=</span> b <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> c\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token comment\">// no intersection</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n    h <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sqrt</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span>b <span class=\"token operator\">-</span> h\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">t</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  pixels<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> height<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> width<span class=\"token punctuation\">,</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">floor</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">/</span> width<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> height<span class=\"token punctuation\">]</span> <span class=\"token comment\">// 0 ~ 1</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// -1 ~ 1</span>\n\n    <span class=\"token comment\">// ortho</span>\n    <span class=\"token comment\">// const ro = [p[0], p[1], 10]</span>\n    <span class=\"token comment\">// const rd = [0, 0, -1]</span>\n\n    <span class=\"token comment\">// perspective</span>\n    <span class=\"token keyword\">const</span> ro <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">let</span> rd <span class=\"token operator\">=</span> vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sub</span><span class=\"token punctuation\">(</span>rd<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ro<span class=\"token punctuation\">)</span>\n    vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">normalize</span><span class=\"token punctuation\">(</span>rd<span class=\"token punctuation\">,</span> rd<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> center <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sin</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">const</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span>\n    <span class=\"token keyword\">const</span> d <span class=\"token operator\">=</span> <span class=\"token function\">sphIntersect</span><span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">,</span> rd<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// normal</span>\n      <span class=\"token keyword\">const</span> nor <span class=\"token operator\">=</span> vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// nor = normalize(ro + rd * d - center)</span>\n      vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span>nor<span class=\"token punctuation\">,</span> ro<span class=\"token punctuation\">,</span> vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">scale</span><span class=\"token punctuation\">(</span>nor<span class=\"token punctuation\">,</span> rd<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">normalize</span><span class=\"token punctuation\">(</span>nor<span class=\"token punctuation\">,</span> vec3<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sub</span><span class=\"token punctuation\">(</span>nor<span class=\"token punctuation\">,</span> nor<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span>nor<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n\n    v<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">backgroundColor</span> <span class=\"token operator\">=</span> <span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token spread operator\">...</span>res<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p><a href=\"https://codesandbox.io/s/3d-rendering-with-div-m9knk\">Try it on CodeSandbox</a></p>\n<p>WebGL</p>\n<h2>References</h2>\n<p><a href=\"https://thebookofshaders.com/\">The Book of Shaders</a></p>\n<p><a href=\"http://www.iquilezles.org/www/articles/spherefunctions/spherefunctions.htm\">sphere functions</a></p>"},"prev":{"slug":"global-state-with-hooks","title":"Global state with hooks","date":1562871240000},"next":null},"__N_SSG":true}