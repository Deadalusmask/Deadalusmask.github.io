{"pageProps":{"post":{"title":"像素游戏的光照效果","date":1520273614000,"slug":"Lighting-in-pixel-game","content":"<p>通过 Pixpil 的微博了解到，Eastward 的光照效果中用到了法线贴图。</p>\n<p><img src=\"/img/ew.gif\" alt=\"Eastward中的光照\"></p>\n<p>遂搜索，找到了一篇 2D 游戏照明的介绍：</p>\n<blockquote>\n<p><a href=\"http://www.wholehog-games.com/devblog/2013/06/07/lighting-in-a-2d-game/\">Lighting a 2D Game</a></p>\n</blockquote>\n<p>其作者是<a href=\"http://store.steampowered.com/app/264060/Full_Bore/\">《Full_Bore》</a>的开发者，根据他的介绍，Full Bore 用基本的漫射贴图(Diffuse)、自发光的强度贴图(Self-Illumination)和法线贴图(Normal)来实现最终的光照效果。</p>\n<p>虽然之前跟着教程做铁砧时生成过法线贴图，不过并没有明白其原理。法线贴图(Normal Map)通过改变物体表面法线的方向，来改变光照的反射效果,使其看起来并不是一个平面而具有更多细节。法线方向用 XYZ 三个方向的大小描述，而图片刚好有 RGB 三个颜色通道。法线贴图的红色通道描述水平方向，绿色通道描述垂直方向，蓝色通道描述垂直于表面的方向。法线贴图中大部分都是淡蓝色是因为平整的地方的法线方向为垂直于表面朝上，所以红绿通道都是中间值 127，表示 0 向量。蓝色通道为 255，表示垂直于表面朝上的单位向量。而(127,127,255)就是法线贴图中常见的那种蓝色。</p>\n<p>这是尝试像素 3D 光照的图片：</p>\n<p><img src=\"/img/lighting-test.png\" alt=\"原图\"></p>\n<p>先根据原图画出凹凸图(Bump Map)：</p>\n<p><img src=\"/img/lighting-test-grey.png\" alt=\"Bump map\"></p>\n<p>然后在 PS 中生成法线图(PS 中生成的法线图的红色通道数值表示的法线方向似乎与 Unity 和 Blender 中是相反的，所以在生成法线图前需要先把图片水平翻转，生成后再翻转回来保存，并且生成后可能需要进行一些调整。)：</p>\n<p><img src=\"/img/lighting-test-nrm.png\" alt=\"Normal map\"></p>\n<p>这是在 Blender 中贴上法线贴图后的效果：</p>\n<p><img src=\"/img/res1.png\" alt=\"res1\"></p>\n<p><img src=\"/img/res2.png\" alt=\"res2\"></p>\n<p>在自发光的物体方面，虽然能通过黑白的自发光强度图在 blender 中烘焙出 emit 并应用于 Unity，但发出的光不能明显的影响这张图上发光物体周围的像素，效果并不好，还需要继续研究。</p>\n<p>接下来想学自己写 Shader，看看到底能实现什么。</p>"},"prev":{"slug":"winter-vacation-daily","title":"寒假日常","date":1519837064000},"next":{"slug":"Retro-Pixel-Button","title":"Retro Pixel Button","date":1520544631000}},"__N_SSG":true}